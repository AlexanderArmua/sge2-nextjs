// Las propiedades y tablas  que estan escritas en ingles, se utilizan por el adapter de NextAuth para el login. No cambiar el nombre de las propiedades.
// Todas las propiedades que no esten en ingles, deben tener algun valor por defecto o aceptar nulo.
// https://authjs.dev/getting-started/adapters/prisma#naming-conventions
model User {
    id            String    @id @default(cuid())
    name          String? // Viene con la cuenta
    email         String?   @unique
    emailVerified DateTime?
    image         String?

    nombre          String?
    apellido        String?
    fechaNacimiento DateTime?
    sexo            Boolean   @default(false)
    direccion       String?
    piso            String?
    departamento    String?
    ciudad          String?
    codigoPostal    String?
    telefonoCasa    String?
    telefonoCelular String?
    telefonoLaboral String?
    documentoNumero String?
    legajo          String?
    gitlab          String?
    penalizaciones  Int       @default(0)

    fechaRegistro            DateTime @default(now())
    fechaUltimoAcceso        DateTime @default(now())
    fechaUltimaActualizacion DateTime @default(now()) @updatedAt

    documentoTipoId Int?
    documentoTipo   DocumentoTipo? @relation(fields: [documentoTipoId], references: [id])

    provinciaIso String?
    provincia    Provincia? @relation(fields: [provinciaIso], references: [iso])

    paisIso String?
    pais    Pais?   @relation(fields: [paisIso], references: [iso])

    accounts   Account[]
    sessions   Session[]
    usuarioRol UsuarioRol[]

    reservasCreadas   Reserva[] @relation(name: "reservasCreadas")
    reservasAprobadas Reserva[] @relation(name: "reservasModificadas")
    reservasComoTutor Reserva[] @relation(name: "reservaTutor")

    cursosProfesor Curso[] @relation(name: "cursosProfesor")
    cursosAyudante Curso[] @relation(name: "cursosAyudante")

    materiasDirector            Materia[] @relation(name: "cursosProfesor")
    materiasJefeTrabajoPractico Materia[] @relation(name: "cursosAyudante")

    @@index([name(sort: Asc)])
    @@index([apellido(sort: Asc)])
    @@index([email(sort: Asc)])
    @@index([legajo(sort: Asc)], map: "usuario_legajo_asc_idx")
    @@index([legajo], type: Hash, map: "usuario_legajo_hash_idx")
}

model UsuarioRol {
    userId  String
    usuario User   @relation(fields: [userId], references: [id])

    rolId Int
    rol   Rol @relation(fields: [rolId], references: [id])

    fechaCreacion    DateTime @default(now())
    usuarioCreadorId String

    @@id([userId, rolId])
}

model Rol {
    id Int @id @default(autoincrement())

    nombre String @unique

    usuarios   UsuarioRol[]
    rolPermiso RolPermiso[]

    fechaCreacion        DateTime @default(now())
    fechaModificacion    DateTime @default(now()) @updatedAt
    usuarioCreadorId     String
    usuarioModificadorId String

    @@index([nombre(sort: Asc)])
}

model RolPermiso {
    rolId Int
    rol   Rol @relation(fields: [rolId], references: [id])

    permisoId Int
    permiso   Permiso @relation(fields: [permisoId], references: [id])

    fechaCreacion    DateTime @default(now())
    usuarioCreadorId String

    @@id([rolId, permisoId])
}

model Permiso {
    id Int @id @default(autoincrement())

    nombre String @unique

    rolPermiso RolPermiso[]

    fechaCreacion        DateTime @default(now())
    fechaModificacion    DateTime @default(now()) @updatedAt
    usuarioCreadorId     String
    usuarioModificadorId String

    @@index([nombre(sort: Asc)])
}

model Provincia {
    iso    String @id
    nombre String

    paisIso String
    pais    Pais   @relation(fields: [paisIso], references: [iso])

    usuarios User[]

    @@index([nombre])
}

model Pais {
    iso            String @id
    nombreEspanol  String
    nombreIngles   String
    iso3           String
    codigoNumerico Int

    usuarios   User[]
    provincias Provincia[]

    @@index([nombreEspanol(sort: Asc)])
    @@index([iso3])
    @@index([codigoNumerico])
}

model DocumentoTipo {
    id Int @id @default(autoincrement())

    nombre String

    usuarios User[]
}
